{
    "language": "it",
    "messages": [
        {
            "id": "(Turn of: {Name}, Companion is: {BriscolaCard}, Played cards: {PlayedCards}, Auction score: {AuctionScore}, Phase: {Phase})",
            "message": "(Turn of: {Name}, Companion is: {BriscolaCard}, Played cards: {PlayedCards}, Auction score: {AuctionScore}, Phase: {Phase})",
            "translation": "(Turno di: {Name}, Compagno: {BriscolaCard}, Carte giocate: {PlayedCards}, Puntegggio d'asta: {AuctionScore}, Fase: {Phase})",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "g.CurrentPlayer().Name()"
                },
                {
                    "id": "BriscolaCard",
                    "string": "%[2]s",
                    "type": "github.com/nikiforosFreespirit/msdb5/dom/card.ID",
                    "underlyingType": "uint8",
                    "argNum": 2,
                    "expr": "g.briscolaCard"
                },
                {
                    "id": "PlayedCards",
                    "string": "%+[3]v",
                    "type": "github.com/nikiforosFreespirit/msdb5/dom/deck.Cards",
                    "underlyingType": "[]github.com/nikiforosFreespirit/msdb5/dom/card.ID",
                    "argNum": 3,
                    "expr": "g.playedCards"
                },
                {
                    "id": "AuctionScore",
                    "string": "%[4]d",
                    "type": "github.com/nikiforosFreespirit/msdb5/dom/auction.Score",
                    "underlyingType": "uint8",
                    "argNum": 4,
                    "expr": "g.auctionScore"
                },
                {
                    "id": "Phase",
                    "string": "%[5]d",
                    "type": "github.com/nikiforosFreespirit/msdb5/app/phase.ID",
                    "underlyingType": "uint8",
                    "argNum": 5,
                    "expr": "g.phase"
                }
            ]
        },
        {
            "id": "Error: {Err}",
            "message": "Error: {Err}",
            "translation": "Errore: {Err}",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%+[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ]
        },
        {
            "id": "Expecting player {Name} to play",
            "message": "Expecting player {Name} to play",
            "translation": "Mi aspetto che sia {Name} a giocare",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                }
            ]
        },
        {
            "id": "Phase is not {InputPhase} but {CurrentPhase}",
            "message": "Phase is not {InputPhase} but {CurrentPhase}",
            "translation": "La fase non e' {InputPhase} ma {CurrentPhase}",
            "placeholders": [
                {
                    "id": "InputPhase",
                    "string": "%[1]d",
                    "type": "uint8",
                    "underlyingType": "uint8",
                    "argNum": 1,
                    "expr": "inputPhase"
                },
                {
                    "id": "CurrentPhase",
                    "string": "%[2]d",
                    "type": "uint8",
                    "underlyingType": "uint8",
                    "argNum": 2,
                    "expr": "currentPhase"
                }
            ]
        },
        {
            "id": "Action {Action} not valid",
            "message": "Action {Action} not valid",
            "translation": "Azione {Action} non valida",
            "placeholders": [
                {
                    "id": "Action",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "action"
                }
            ]
        },
        {
            "id": "Player: {Pl}",
            "message": "Player: {Pl}",
            "translation": "Giocatore: {Pl}",
            "placeholders": [
                {
                    "id": "Pl",
                    "string": "%+[1]v",
                    "type": "*github.com/nikiforosFreespirit/msdb5/dom/player.Player",
                    "underlyingType": "*github.com/nikiforosFreespirit/msdb5/dom/player.Player",
                    "argNum": 1,
                    "expr": "pl"
                }
            ]
        },
        {
            "id": "Side deck: {SideDeck}",
            "message": "Side deck: {SideDeck}",
            "translation": "Monte: {SideDeck}",
            "placeholders": [
                {
                    "id": "SideDeck",
                    "string": "%+[1]v",
                    "type": "github.com/nikiforosFreespirit/msdb5/dom/deck.Cards",
                    "underlyingType": "[]github.com/nikiforosFreespirit/msdb5/dom/card.ID",
                    "argNum": 1,
                    "expr": "*gameInfo.SideDeck()"
                }
            ]
        },
        {
            "id": "Side deck section: {SideDeckquantity}",
            "message": "Side deck section: {SideDeckquantity}",
            "translation": "Sezione del monte: {SideDeckquantity}",
            "placeholders": [
                {
                    "id": "SideDeckquantity",
                    "string": "%+[1]v",
                    "type": "github.com/nikiforosFreespirit/msdb5/dom/deck.Cards",
                    "underlyingType": "[]github.com/nikiforosFreespirit/msdb5/dom/card.ID",
                    "argNum": 1,
                    "expr": "(*gameInfo.SideDeck())[:quantity]"
                }
            ]
        },
        {
            "id": "Game: {GameInfo}",
            "message": "Game: {GameInfo}",
            "translation": "Informazioni di gioco {GameInfo}",
            "placeholders": [
                {
                    "id": "GameInfo",
                    "string": "%+[1]v",
                    "type": "github.com/nikiforosFreespirit/msdb5/app/notify.sidedeckInformer",
                    "underlyingType": "interface{Lang() golang.org/x/text/language.Tag; SideDeck() *github.com/nikiforosFreespirit/msdb5/dom/deck.Cards}",
                    "argNum": 1,
                    "expr": "gameInfo"
                }
            ]
        },
        {
            "id": "The end - {Team} team has all briscola cards",
            "message": "The end - {Team} team has all briscola cards",
            "translation": "Fine - I {Team} hanno tutte le briscole",
            "placeholders": [
                {
                    "id": "Team",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "team"
                }
            ]
        },
        {
            "id": "The end - Callers: {ScoreTeam1}; Others: {ScoreTeam2}",
            "message": "The end - Callers: {ScoreTeam1}; Others: {ScoreTeam2}",
            "translation": "Fine - Chiamanti: {ScoreTeam1}; Non-chiamanti: {ScoreTeam2}",
            "placeholders": [
                {
                    "id": "ScoreTeam1",
                    "string": "%[1]d",
                    "type": "uint8",
                    "underlyingType": "uint8",
                    "argNum": 1,
                    "expr": "scoreTeam1"
                },
                {
                    "id": "ScoreTeam2",
                    "string": "%[2]d",
                    "type": "uint8",
                    "underlyingType": "uint8",
                    "argNum": 2,
                    "expr": "scoreTeam2"
                }
            ]
        }
    ]
}